{"ast":null,"code":"var _jsxFileName = \"/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: '',\n      comments: [],\n      isOpened: false,\n      id: this.props.articleId\n    };\n    this.toggleBox = this.toggleBox.bind(this);\n    this.refreshComment = this.refreshComment.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshComment();\n  }\n\n  refreshComment() {\n    CommentDataService.getTopCommentFromArticleId(this.state.id).then(response => {\n      console.log(response);\n      this.setState({\n        comment: response.data\n      });\n    });\n  }\n\n  toggleBox() {\n    this.setState({\n      isOpened: true\n    });\n    CommentDataService.getCommentsFromArticleId(this.state.id).then(response => {\n      console.log(response);\n      this.setState({\n        comments: response.data\n      });\n    });\n  }\n\n  render() {\n    const isOpened = this.state.isOpened;\n    return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n      className: \"subHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Add Comment\"), React.createElement(\"form\", {\n      className: \"addComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Display Name\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      className: \"form-control\",\n      id: \"userName\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"William Howard Taft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      className: \"form-control addCommentTextArea\",\n      id: \"comment\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"This article was perfect...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Post\")), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, !isOpened && React.createElement(React.Fragment, null, this.state.comment.id > -100 && React.createElement(\"div\", {\n      className: \"contianer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"commentUserName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, comment.userName), React.createElement(\"p\", {\n      className: \"commentDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" - \", comment.date)), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.comment.text), React.createElement(\"div\", {\n      className: \"commentButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", this.state.comment.likes), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" \", this.state.comment.dislikes)), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-block viewCommentsButton\",\n      onClick: this.toggleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Load Comments\")), isOpened && React.createElement(\"div\", {\n      className: \"boxContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"subHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.comments.map(comment => React.createElement(\"div\", {\n      className: \"contianer\",\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"commentUserName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, comment.userName), React.createElement(\"p\", {\n      className: \"commentDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" - \", comment.date)), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, comment.text), React.createElement(\"div\", {\n      className: \"commentButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", comment.likes), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" \", comment.dislikes)), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx"],"names":["React","Component","LineComponent","CommentDataService","CommentComponent","constructor","props","state","comment","comments","isOpened","id","articleId","toggleBox","bind","refreshComment","componentDidMount","getTopCommentFromArticleId","then","response","console","log","setState","data","getCommentsFromArticleId","render","userName","date","text","likes","dislikes","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\"\n\nclass CommentComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          comment: '',\n          comments: [],\n          isOpened: false,\n          id: this.props.articleId\n        };\n        this.toggleBox = this.toggleBox.bind(this);\n        this.refreshComment = this.refreshComment.bind(this);\n      }\n    \n      componentDidMount() {\n        this.refreshComment();\n      }\n\n      refreshComment() {\n        CommentDataService.getTopCommentFromArticleId(this.state.id)\n        .then(\n            response => {\n                console.log(response);\n                this.setState({comment: response.data})\n            }\n        )\n      }\n\n      toggleBox() {\n        this.setState({isOpened: true});\n        CommentDataService.getCommentsFromArticleId(this.state.id)\n            .then(\n                response => {\n                    console.log(response);\n                    this.setState({comments: response.data})\n                }\n            )\n      }\n    \n      render() {        \n        const { isOpened } = this.state;\n        return (\n\n          <>\n          <h5 className=\"subHeading\">Add Comment</h5>\n\n          <form className=\"addComment\">\n            <div className=\"form-group\">\n              <label >Display Name</label>\n              <input type=\"textarea\" className=\"form-control\" id=\"userName\" aria-describedby=\"emailHelp\" placeholder=\"William Howard Taft\"/>\n            </div>\n            <div className=\"form-group\">\n              <label >Comment</label>\n              <input type=\"textarea\" className=\"form-control addCommentTextArea\" id=\"comment\" aria-describedby=\"emailHelp\" placeholder=\"This article was perfect...\"/>\n            </div>\n            <button className=\"btn btn-dark\">Post</button>\n          </form>\n\n          <LineComponent/>\n\n          <div className=\"box\">\n            { !isOpened && (\n              <>\n              \n              { this.state.comment.id > -100 && (\n\n                <div className=\"contianer\">\n                    <div className=\"displayComment\">\n                      <div className=\"commentHeader\">\n                          <p className=\"commentUserName\">{comment.userName}</p>\n                          <p className=\"commentDate\"> - {comment.date}</p>\n                      </div>\n                      <p className=\"commentText\">{this.state.comment.text}</p>\n                      <div className=\"commentButtons\">\n                          <p className=\"likeDislikeButton\">Like</p> \n                          <p className=\"likeDislike\"> {this.state.comment.likes}</p>\n                          <p className=\"likeDislikeButton\">Dislike</p>\n                          <p className=\"likeDislike\"> {this.state.comment.dislikes}</p>\n                      </div>\n                      <LineComponent/>\n                    </div>                  \n                  </div>\n              )}\n\n            <button className=\"btn btn-block viewCommentsButton\" onClick={this.toggleBox}>\n              Load Comments\n            </button>\n            </>)}\n            {isOpened && (\n\n              <div className=\"boxContent\">\n\n                <h4 className=\"subHeading\">Comments</h4>\n\n                <LineComponent/>\n\n                {\n                  this.state.comments.map(\n                        comment =>\n                          <div className=\"contianer\" key={comment.id}>\n                          <div className=\"displayComment\">\n                            <div className=\"commentHeader\">\n                              <p className=\"commentUserName\">{comment.userName}</p>\n                              <p className=\"commentDate\"> - {comment.date}</p>\n                            </div>\n                            <p className=\"commentText\">{comment.text}</p>\n                            <div className=\"commentButtons\">\n                                <p className=\"likeDislikeButton\">Like</p> \n                                <p className=\"likeDislike\"> {comment.likes}</p>\n                                <p className=\"likeDislikeButton\">Dislike</p>\n                                <p className=\"likeDislike\"> {comment.dislikes}</p>\n                            </div>\n                            <LineComponent/>\n                          </div>                  \n                        </div>\n                      )\n                }\n\n              </div>\n            )}\n          </div>\n          </>\n        );\n      }\n\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}