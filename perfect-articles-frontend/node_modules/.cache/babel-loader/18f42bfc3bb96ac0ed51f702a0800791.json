{"ast":null,"code":"var _jsxFileName = \"/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: this.props.comment,\n      commentId: this.props.commentId,\n      liked: false,\n      disliked: false,\n      likedColor: 'black',\n      likedColor: 'black'\n    };\n    this.refreshComment = this.refreshComment.bind(this);\n  }\n\n  componentDidMount() {}\n\n  refreshComment() {\n    CommentDataService.getCommentById(this.state.commentId).then(response => {\n      console.log(response);\n      this.setState({\n        comment: response.data\n      });\n    });\n  }\n\n  likedComment(comment) {\n    let likes = \"LIKES\"; // option for likes\n\n    if (!this.state.disliked) {\n      if (this.state.liked) {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, -1).then(() => (this.state.liked = false, this.state.likedColor = 'black', this.refreshComment()));\n      } else {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, 1).then(() => (this.state.liked = true, this.state.likedColor = 'red', this.refreshComment()));\n      }\n    }\n  }\n\n  dislikedComment(comment) {\n    let likes = \"DISLIKES\"; // option for dislikes\n\n    if (!this.state.liked) {\n      if (this.state.disliked) {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, -1).then(() => (this.state.disliked = false, this.state.dislikedColor = 'black', this.refreshComment()));\n      } else {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, 1).then(() => (this.state.disliked = true, this.state.dislikedColor = 'red', this.refreshComment()));\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contianer displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"commentUserName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.comment.userName), React.createElement(\"p\", {\n      className: \"commentDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" - \", this.state.comment.date)), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.comment.text), React.createElement(\"div\", {\n      className: \"commentButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      style: {\n        color: this.state.likedColor\n      },\n      onClick: () => this.likedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" \", this.state.comment.likes), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      style: {\n        color: this.state.dislikedColor\n      },\n      onClick: () => this.dislikedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", this.state.comment.dislikes)), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx"],"names":["React","Component","LineComponent","CommentDataService","CommentComponent","constructor","props","state","comment","commentId","liked","disliked","likedColor","refreshComment","bind","componentDidMount","getCommentById","then","response","console","log","setState","data","likedComment","likes","updateLikesDislikesComment","id","dislikedComment","dislikedColor","render","userName","date","text","color","dislikes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\"\n\nclass CommentComponent extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        comment: this.props.comment,\n        commentId: this.props.commentId,\n        liked: false,\n        disliked: false,\n        likedColor: 'black',\n        likedColor: 'black'\n      };\n      this.refreshComment = this.refreshComment.bind(this);\n  }\n    \n  componentDidMount() {\n  }\n\n  refreshComment() {\n    CommentDataService.getCommentById(this.state.commentId)\n    .then(\n        response => {\n            console.log(response);\n            this.setState({comment: response.data})\n        }\n    )\n  }\n\n  likedComment(comment) {\n\n    let likes = \"LIKES\" // option for likes\n\n    if (!this.state.disliked) {\n      if (this.state.liked) {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, -1)\n          .then(() => (\n          this.state.liked = false,\n          this.state.likedColor = 'black',\n          this.refreshComment()\n          ))\n      } else {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, 1)\n          .then(() => (\n          this.state.liked = true,\n          this.state.likedColor = 'red',\n          this.refreshComment()\n          ))\n      }\n    }\n  }\n\n  dislikedComment(comment) {\n\n    let likes = \"DISLIKES\" // option for dislikes\n\n    if (!this.state.liked) {\n      if (this.state.disliked) {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, -1)\n          .then(() => (\n          this.state.disliked = false,\n          this.state.dislikedColor = 'black',\n          this.refreshComment()\n          ))\n      } else {\n        CommentDataService.updateLikesDislikesComment(comment.id, likes, 1)\n          .then(() => (\n          this.state.disliked = true,\n          this.state.dislikedColor = 'red',\n          this.refreshComment()\n          ))\n      }\n    }\n  }\n    \n  render() {\n    return (\n        <div className=\"contianer displayComment\">\n          <div className=\"commentHeader\">\n              <p className=\"commentUserName\">{this.state.comment.userName}</p>\n              <p className=\"commentDate\"> - {this.state.comment.date}</p>\n          </div>\n          <p className=\"commentText\">{this.state.comment.text}</p>\n          <div className=\"commentButtons\">\n              <p className=\"likeDislikeButton\" style={{color: this.state.likedColor}} onClick={\n                () => this.likedComment(this.state.comment)}>Like</p> \n              <p className=\"likeDislike\"> {this.state.comment.likes}</p>\n              <p className=\"likeDislikeButton\" style={{color: this.state.dislikedColor}} onClick={\n                () => this.dislikedComment(this.state.comment)}>Dislike</p>\n              <p className=\"likeDislike\"> {this.state.comment.dislikes}</p>\n          </div>\n          <LineComponent/>\n        </div>\n    );\n  }\n\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}