{"ast":null,"code":"var _jsxFileName = \"/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: this.props.comment,\n      commentId: this.props.commentId\n    };\n    this.refreshComment = this.refreshComment.bind(this);\n  }\n\n  componentDidMount() {}\n\n  refreshComment() {\n    this.setState({\n      isOpened: false\n    });\n    CommentDataService.getCommentById(this.commentId).then(response => {\n      console.log(response);\n      this.setState({\n        comment: response.data\n      });\n    });\n  }\n\n  likedComment(comment) {\n    // let comment = {\n    //     userName: values.commentUserName,\n    //     text: values.commentText,\n    //     likes: 0,\n    //     dislikes: 0\n    // }\n    CommentDataService.updateLikesDislikesComment(comment);\n    this.refreshComment();\n  }\n\n  dislikedComment(comment) {\n    let likes = \"LIKES\"; // option for likes\n\n    CommentDataService.updateLikesDislikesComment(comment.id, likes, 1);\n    this.refreshComment();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contianer displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"commentUserName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.comment.userName), React.createElement(\"p\", {\n      className: \"commentDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" - \", this.state.comment.date)), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.comment.text), React.createElement(\"div\", {\n      className: \"commentButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      onClick: () => this.likedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", this.state.comment.likes), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      onClick: () => this.likedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", this.state.comment.dislikes)), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx"],"names":["React","Component","LineComponent","CommentDataService","CommentComponent","constructor","props","state","comment","commentId","refreshComment","bind","componentDidMount","setState","isOpened","getCommentById","then","response","console","log","data","likedComment","updateLikesDislikesComment","dislikedComment","likes","id","render","userName","date","text","dislikes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\"\n\nclass CommentComponent extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        comment: this.props.comment,\n        commentId: this.props.commentId\n      };\n      this.refreshComment = this.refreshComment.bind(this);\n  }\n    \n  componentDidMount() {\n  }\n\n  refreshComment() {\n    this.setState({isOpened: false});\n    CommentDataService.getCommentById(this.commentId)\n    .then(\n        response => {\n            console.log(response);\n            this.setState({comment: response.data})\n        }\n    )\n  }\n\n  likedComment(comment) {\n\n    // let comment = {\n    //     userName: values.commentUserName,\n    //     text: values.commentText,\n    //     likes: 0,\n    //     dislikes: 0\n    // }\n\n    CommentDataService.updateLikesDislikesComment(comment)\n    this.refreshComment()\n  }\n\n  dislikedComment(comment) {\n\n    let likes = \"LIKES\" // option for likes\n\n    CommentDataService.updateLikesDislikesComment(comment.id, likes, 1)\n    this.refreshComment()\n  }\n    \n  render() {\n    return (\n        <div className=\"contianer displayComment\">\n          <div className=\"commentHeader\">\n              <p className=\"commentUserName\">{this.state.comment.userName}</p>\n              <p className=\"commentDate\"> - {this.state.comment.date}</p>\n          </div>\n          <p className=\"commentText\">{this.state.comment.text}</p>\n          <div className=\"commentButtons\">\n              <p className=\"likeDislikeButton\" onClick={() => this.likedComment(this.state.comment)}>Like</p> \n              <p className=\"likeDislike\"> {this.state.comment.likes}</p>\n              <p className=\"likeDislikeButton\" onClick={() => this.likedComment(this.state.comment)}>Dislike</p>\n              <p className=\"likeDislike\"> {this.state.comment.dislikes}</p>\n          </div>\n          <LineComponent/>\n        </div>\n    );\n  }\n\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}