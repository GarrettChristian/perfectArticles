{"ast":null,"code":"var _jsxFileName = \"/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport ArticleDataService from '../../service/ArticleDataService';\nimport LineComponent from '../LineComponent';\nimport \"./CommentStyle.css\";\n\nclass CommentComponent extends Component {\n  // constructor(props) {\n  //     super(props)\n  //     this.state = {\n  //         articles: [],\n  //         message: null\n  //     }\n  //     this.refreshArticles = this.refreshArticles.bind(this)\n  // }\n  // componentDidMount() {\n  //     this.refreshArticles();\n  // }\n  // refreshArticles() {\n  //     ArticleDataService.retrieveTitles()\n  //         .then(\n  //             response => {\n  //                 console.log(response);\n  //                 this.setState({articles: response.data})\n  //             }\n  //         )\n  // }\n  // expandComments() {\n  //     setVisiblity(View.Invisible)\n  // }\n  // render() {\n  //     return (\n  //         <div className=\"container\">\n  //             <div className=\"container\">\n  //                 <button className=\"btn btn-block viewCommentsButton\" onClick={this.expandComments}>View Comments</button>\n  //             </div>\n  //             //Add a comment\n  //             <div className=\"commentLargerBox\">\n  //             </div>\n  //         </div>\n  //     )\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      // toggle box is closed initially\n      isOpened: false\n    }; // http://egorsmirnov.me/2015/08/16/react-and-es6-part3.html\n\n    this.toggleBox = this.toggleBox.bind(this);\n  }\n\n  toggleBox() {\n    this.setState({\n      isOpened: true\n    });\n  }\n\n  render() {\n    const articleId = this.props.articleId;\n    const isOpened = this.state.isOpened;\n    return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n      className: \"subHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Add Comment\"), React.createElement(\"form\", {\n      className: \"addComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Display Name\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      class: \"form-control\",\n      id: \"userName\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"William Howard Taft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      class: \"form-control addCommentTextArea\",\n      id: \"comment\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"This article was perfect...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Post\")), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, !isOpened && React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n      className: \"subHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Most recent comment\"), React.createElement(\"button\", {\n      className: \"btn btn-block viewCommentsButton\",\n      onClick: this.toggleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Load Comments\")), isOpened && React.createElement(\"div\", {\n      className: \"boxContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"subHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"contianer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"User Name \"), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Comment textttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttextexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext\"), React.createElement(\"div\", {\n      className: \"optionsComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" 15\"), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" 13\"), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Reply\")), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx"],"names":["React","Component","ArticleDataService","LineComponent","CommentComponent","constructor","props","state","isOpened","toggleBox","bind","setState","render","articleId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ArticleDataService from '../../service/ArticleDataService';\nimport LineComponent from '../LineComponent';\nimport \"./CommentStyle.css\"\n\nclass CommentComponent extends Component {\n    \n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         articles: [],\n    //         message: null\n    //     }\n    //     this.refreshArticles = this.refreshArticles.bind(this)\n    // }\n\n    // componentDidMount() {\n    //     this.refreshArticles();\n    // }\n\n    // refreshArticles() {\n    //     ArticleDataService.retrieveTitles()\n    //         .then(\n    //             response => {\n    //                 console.log(response);\n    //                 this.setState({articles: response.data})\n    //             }\n    //         )\n    // }\n\n    // expandComments() {\n    //     setVisiblity(View.Invisible)\n    // }\n\n    // render() {\n    //     return (\n    //         <div className=\"container\">\n\n    //             <div className=\"container\">\n    //                 <button className=\"btn btn-block viewCommentsButton\" onClick={this.expandComments}>View Comments</button>\n    //             </div>\n                \n    //             //Add a comment\n\n    //             <div className=\"commentLargerBox\">\n                    \n    //             </div>\n\n    //         </div>\n    //     )\n    // }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          // toggle box is closed initially\n          isOpened: false\n        };\n        // http://egorsmirnov.me/2015/08/16/react-and-es6-part3.html\n        this.toggleBox = this.toggleBox.bind(this);\n      }\n    \n      toggleBox() {\n        this.setState({isOpened: true});\n      }\n    \n      render() {\n        const { articleId } = this.props;\n        const { isOpened } = this.state;\n        return (\n\n          <>\n          <h5 className=\"subHeading\">Add Comment</h5>\n\n          <form className=\"addComment\">\n            <div class=\"form-group\">\n              <label for=\"userName\">Display Name</label>\n              <input type=\"textarea\" class=\"form-control\" id=\"userName\" aria-describedby=\"emailHelp\" placeholder=\"William Howard Taft\"/>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Comment</label>\n              <input type=\"textarea\" class=\"form-control addCommentTextArea\" id=\"comment\" aria-describedby=\"emailHelp\" placeholder=\"This article was perfect...\"/>\n            </div>\n            <button class=\"btn btn-dark\">Post</button>\n          </form>\n\n          <LineComponent/>\n\n          <div className=\"box\">\n            { !isOpened && (\n              <>\n              <h4 className=\"subHeading\">Most recent comment</h4>\n\n            <button className=\"btn btn-block viewCommentsButton\" onClick={this.toggleBox}>\n              Load Comments\n            </button>\n            </>)}\n            {isOpened && (\n\n              <div className=\"boxContent\">\n\n                <h4 className=\"subHeading\">Comments</h4>\n\n                <LineComponent/>\n\n                <div className=\"contianer\">\n                  <div className=\"displayComment\">\n                    <p>User Name </p>\n                    <p className=\"commentText\">Comment textttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttextexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext</p>\n                    <div className=\"optionsComment\">\n                        <p className=\"likeDislikeButton\">Like</p> \n                        <p className=\"likeDislike\"> 15</p>\n                        <p className=\"likeDislikeButton\">Dislike</p>\n                        <p className=\"likeDislike\"> 13</p>\n                        <p className=\"likeDislikeButton\">Reply</p>\n                    </div>\n                    \n                    <LineComponent/>\n\n                  </div>\n                  \n                </div>\n\n\n              </div>\n            )}\n          </div>\n          </>\n        );\n      }\n\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}