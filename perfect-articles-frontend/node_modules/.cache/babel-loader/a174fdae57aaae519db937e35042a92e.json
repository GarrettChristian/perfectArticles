{"ast":null,"code":"var _jsxFileName = \"/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: this.props.comment,\n      articleId: this.props.articleId,\n      commentId: this.props.commentId\n    };\n    this.refreshComment = this.refreshComment.bind(this);\n  }\n\n  componentDidMount() {}\n\n  refreshComment() {\n    this.setState({\n      isOpened: false\n    });\n    CommentDataService.getCommentById(this.commentId).then(response => {\n      console.log(response);\n      this.setState({\n        comment: response.data\n      });\n    });\n  } //   likedComment(comment) {\n  //     let articleId = this.state.articleId\n  //     let comment = {\n  //         userName: values.commentUserName,\n  //         text: values.commentText,\n  //         likes: 0,\n  //         dislikes: 0\n  //     }\n  //     CommentDataService.updateCommentOnArticle(articleId, comment)\n  //     this.refreshComment()\n  //   }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contianer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"commentUserName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.comment.userName), React.createElement(\"p\", {\n      className: \"commentDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" - \", this.state.comment.date)), React.createElement(\"p\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.comment.text), React.createElement(\"div\", {\n      className: \"commentButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      onClick: () => this.likedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", this.state.comment.likes), React.createElement(\"p\", {\n      className: \"likeDislikeButton\",\n      onClick: () => this.dislikedComment(this.state.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Dislike\"), React.createElement(\"p\", {\n      className: \"likeDislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", this.state.comment.dislikes)), React.createElement(LineComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/Users/garrettchristian/Documents/cs 2019/perfectSenseInterview/perfect-articles-frontend/src/component/comment/CommentComponent.jsx"],"names":["React","Component","LineComponent","CommentDataService","CommentComponent","constructor","props","state","comment","articleId","commentId","refreshComment","bind","componentDidMount","setState","isOpened","getCommentById","then","response","console","log","data","render","userName","date","text","likedComment","likes","dislikedComment","dislikes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAO,oBAAP;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAEvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OADT;AAEXC,MAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAFX;AAGXC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI;AAHX,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDF,EAAAA,cAAc,GAAG;AACf,SAAKG,QAAL,CAAc;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACAZ,IAAAA,kBAAkB,CAACa,cAAnB,CAAkC,KAAKN,SAAvC,EACCO,IADD,CAEIC,QAAQ,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKJ,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEU,QAAQ,CAACG;AAAnB,OAAd;AACH,KALL;AAOD,GAxBsC,CA0BzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEEC,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,QAAnD,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+B,KAAKhB,KAAL,CAAWC,OAAX,CAAmBgB,IAAlD,CAFJ,CADJ,EAKI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKjB,KAAL,CAAWC,OAAX,CAAmBiB,IAA/C,CALJ,EAMI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkB,KAAKnB,KAAL,CAAWC,OAA7B,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6B,KAAKD,KAAL,CAAWC,OAAX,CAAmBmB,KAAhD,CAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,CAAqB,KAAKrB,KAAL,CAAWC,OAAhC,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6B,KAAKD,KAAL,CAAWC,OAAX,CAAmBqB,QAAhD,CAJJ,CANJ,EAYI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,CADJ;AAkBD;;AA3DsC;;AA+DzC,eAAezB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport LineComponent from '../LineComponent';\nimport CommentDataService from '../../service/CommentDataService';\nimport \"./CommentStyle.css\"\n\nclass CommentComponent extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        comment: this.props.comment,\n        articleId: this.props.articleId,\n        commentId: this.props.commentId\n      };\n      this.refreshComment = this.refreshComment.bind(this);\n  }\n    \n  componentDidMount() {\n  }\n\n  refreshComment() {\n    this.setState({isOpened: false});\n    CommentDataService.getCommentById(this.commentId)\n    .then(\n        response => {\n            console.log(response);\n            this.setState({comment: response.data})\n        }\n    )\n  }\n\n//   likedComment(comment) {\n\n//     let articleId = this.state.articleId\n//     let comment = {\n//         userName: values.commentUserName,\n//         text: values.commentText,\n//         likes: 0,\n//         dislikes: 0\n//     }\n\n//     CommentDataService.updateCommentOnArticle(articleId, comment)\n//     this.refreshComment()\n//   }\n    \n  render() {\n    return (\n        <div className=\"contianer\">\n            <div className=\"displayComment\">\n                <div className=\"commentHeader\">\n                    <p className=\"commentUserName\">{this.state.comment.userName}</p>\n                    <p className=\"commentDate\"> - {this.state.comment.date}</p>\n                </div>\n                <p className=\"commentText\">{this.state.comment.text}</p>\n                <div className=\"commentButtons\">\n                    <p className=\"likeDislikeButton\" onClick={() => this.likedComment(this.state.comment)}>Like</p> \n                    <p className=\"likeDislike\"> {this.state.comment.likes}</p>\n                    <p className=\"likeDislikeButton\" onClick={() => this.dislikedComment(this.state.comment)}>Dislike</p>\n                    <p className=\"likeDislike\"> {this.state.comment.dislikes}</p>\n                </div>\n                <LineComponent/>\n            </div>                  \n        </div>\n    );\n  }\n\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}